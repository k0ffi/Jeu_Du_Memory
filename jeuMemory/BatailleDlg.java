package jeuMemory;

import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lenovo
 */
public class BatailleDlg extends javax.swing.JDialog {

  // attributs 
    LesJoueurs lj ; 
    int indj ; // indice du joueurs courant 
   Joueur adversaire ; 
   boolean ok;
   Bataille b  ;
    public BatailleDlg(java.awt.Frame parent, boolean modal, LesJoueurs lj ,  int jc) {
        super(parent, modal);
        initComponents();
        this.lj = lj ; 
        this.indj = jc ; 
        this.Adversaire = null ; 
        this.ok  =false  ;  
        this.b = null ; 
        Annuler.setText("Annuler"); 
        Annuler.setVisible(false); 
        MessageJ.setText(""+this.lj.getJoueur(this.indj).getPseudo()+" Va Ã©ffectuer une Bataille contre "+this.adversaire.getPseudo());
        initListeJ() ;
    }

    private BatailleDlg(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    // construction de la jListe 
    
     private void initListeJ() {
         
         DefaultListModel mod =  new DefaultListModel() ; 
         ListeJ.setModel(mod) ; 
         
         for(int i=0 ; i< lj.getNbJoueurs() ; i++ ) 
         {
             mod.addElement(lj.getJoueur(i).getPseudo());
             ListeJ.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
         }
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        MessageJ = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListeJ = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        Joueur = new javax.swing.JLabel();
        Adversaire = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        InfosCarte1 = new javax.swing.JTextArea();
        Carte1 = new javax.swing.JButton();
        Carte2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        InfosCarte2 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        Vainqueur = new javax.swing.JLabel();
        Demarrer = new javax.swing.JButton();
        Annuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));
        jPanel5.add(MessageJ);

        ListeJ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListeJMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListeJ);

        jPanel5.add(jScrollPane1);

        getContentPane().add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel40.setLayout(new java.awt.GridLayout(1, 2));
        jPanel40.add(Joueur);
        jPanel40.add(Adversaire);

        jPanel1.add(jPanel40, java.awt.BorderLayout.NORTH);

        jPanel20.setLayout(new java.awt.GridLayout(1, 4));

        InfosCarte1.setColumns(20);
        InfosCarte1.setRows(5);
        jScrollPane2.setViewportView(InfosCarte1);

        jPanel20.add(jScrollPane2);

        Carte1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/anonyme.png"))); // NOI18N
        jPanel20.add(Carte1);

        Carte2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/anonyme.png"))); // NOI18N
        jPanel20.add(Carte2);

        InfosCarte2.setColumns(20);
        InfosCarte2.setRows(5);
        jScrollPane3.setViewportView(InfosCarte2);

        jPanel20.add(jScrollPane3);

        jPanel1.add(jPanel20, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));
        jPanel4.add(Vainqueur);

        Demarrer.setText("Demarrer");
        Demarrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DemarrerActionPerformed(evt);
            }
        });
        jPanel4.add(Demarrer);

        Annuler.setText("Annuler/Fermer ");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });
        jPanel4.add(Annuler);

        getContentPane().add(jPanel4, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListeJMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListeJMouseClicked
       
        // Recuperer Valeur Selectionner 
        int  ind  = ListeJ.getSelectedIndex() ; 
        if(ind != -1)
        {
            Joueur jo = this.lj.getJoueur(indj) ; // joueur
         if(this.lj.getJoueur(ind).getPseudo().equals(jo.getPseudo()))
         {
             Joueur.setText("Selectioner un joueur different ");
         }else // joueur selectionner correct
         {
             this.adversaire =  this.lj.getJoueur(ind);
             this.b  =  new Bataille(jo ,this.adversaire ) ; 
             Annuler.setVisible(true); 
             Joueur.setText(jo.getPseudo());
             Adversaire.setText(this.adversaire.getPseudo());
             InfosCarte1.setText(jo.getPaquet().toString()); 
             InfosCarte2.setText(this.adversaire.getPaquet().toString());
             
         }
        }
        
        
    }//GEN-LAST:event_ListeJMouseClicked

    private void DemarrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DemarrerActionPerformed
        // TODO add your handling code here:
     Joueur jc  = this.lj.getJoueur(this.indj) ; 
     // afficher l'infos des deux joueurs 
     InfosCarte1.append("\n"+jc.getPseudo()+" Joueur "+jc.getPaquet().getPerso(0) + "\n" );
     InfosCarte2.append("\n"+this.adversaire.getPseudo()+" Joueur "+this.adversaire.getPaquet().getPerso(0) + "\n" );
     
     // execution de la bataille 
     int res = this.b.execute() ; 
     
     switch(res)
     {
         case 0 : {
             InfosCarte1.append("Ex aequo : aucun Gagnant");
             InfosCarte2.append("Ex aequo : aucun Gagnant");
             break  ; 
         }
         case 1 :
         {
             InfosCarte1.append(jc.getPseudo()+" gagne \n");
             InfosCarte2.append(this.adversaire.getPseudo()+" perd \n");
             Vainqueur. setText("Vainqueur : "+ jc.getPseudo());

         }
         case 2 : 
         {
             InfosCarte1.append(jc.getPseudo()+" perd \n");
             InfosCarte2.append(this.adversaire.getPseudo()+" gagne \n");
             Vainqueur. setText("Vainqueur : "+ this.adversaire.getPseudo());

         }
         
         
     }
     
     // affichage du nouveau contenu des paquets
    InfosCarte1.append(jc.getPaquet()+""); 
    InfosCarte2.append(this.adversaire.getPaquet()+"") ; 
          this.ok =true ; 
          
          // S'in ya plus de carte 
          
          LesPersonnages pjc = jc.getPaquet() ; // paquet du joueur
          LesPersonnages pad  =  this.adversaire.getPaquet() ; // paquet de l'aversaire 
          
          if(pjc.getTaille()==0 || pad.getTaille()==0)
          {
              Demarrer.enable(false);  // desactiver le bouton 
              Annuler.setText("Fermer"); 
                  }
          else // ils ont encore des cartes
          {
              pjc.getPerso(0).setImgBouton(Carte1);
              pad.getPerso(0).setImgBouton(Carte2);
          }
    }//GEN-LAST:event_DemarrerActionPerformed

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerActionPerformed
        // TODO add your handling code here:
        this.ok=false;
 if (Annuler.getText().equals("Annuler"))
 this.b.setDeroulement("Bataille interrompue en cours de partie");
 this.setVisible(false);
 this.dispose();
    }//GEN-LAST:event_AnnulerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BatailleDlg dialog = new BatailleDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Adversaire;
    private javax.swing.JButton Annuler;
    private javax.swing.JButton Carte1;
    private javax.swing.JButton Carte2;
    private javax.swing.JButton Demarrer;
    private javax.swing.JTextArea InfosCarte1;
    private javax.swing.JTextArea InfosCarte2;
    private javax.swing.JLabel Joueur;
    private javax.swing.JList<String> ListeJ;
    private javax.swing.JLabel MessageJ;
    private javax.swing.JLabel Vainqueur;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables

   
}
